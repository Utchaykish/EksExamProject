version: 2.1
orbs:
  slack: circleci/slack@4.12.1
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3


defaults:
  - &kubeImage
    docker:
      - image: utchaykish/myimage:1.1.0
  - &nImage
    docker:
      - image: 'cimg/python:3.10'
  - &terraformImage
    docker:
      - image: hashicorp/terraform:1.0.0

commands:
  connect-eks-to-kubectl:
    steps:
      - run:
          name: Connect to eks
          command: |
            aws eks update-kubeconfig --region us-east-1 --name utchaykish-cluster
  deploy-ingress:
    steps:
      - run:
         command: |
            kubectl apply -f deploy.yaml
         name: Deploy ingress 
jobs:
  build-base-image:
    machine:
      image: ubuntu-2204:2022.04.2
    steps:
      - checkout
      - run:
          name: Build docker image
          command: |
            docker --version
            echo "$DOCKERHUB_PASSWORD" | docker login -u -p "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t myimage:1.1.0 .circleci/.
            docker tag myimage:1.1.0 utchaykish/myimage:1.1.0
            docker push utchaykish/myimage:1.1.0
      

  configure-infra:
      <<: *terraformImage
      steps:
      - checkout
      - run:
          name: Configure infrastructure
          command: |
            cd .circleci/Eks
            terraform init
            terraform apply -auto-approve
  deploy-socks-app:
    <<: *nImage
    steps:
      - checkout
      - kubernetes/install:
            kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: utchaykish-cluster
          aws-region: us-east-1
      - run:
          command: |
            kubectl apply -f ./sock-shop/deploy/kubernetes/complete-demo.yaml
          name: deploy monitoring
      - run:
          command: |
            kubectl get services
            kubectl get pods
            kubectl get deployments
          name: check deployments


  bring-down-web-app:
    <<: *kubeImage
    steps:
      - checkout
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: utchaykish-cluster
          aws-region: us-east-1
      - run:
          command: |
            kubectl delete -f deploy.yaml
      - run:
          command: |
            kubectl delete -f ./sock-shop/deploy/kubernetes/manifests-monitoring
          name: Bring down monitoring
      - run:
          command: |
            kubectl delete -f ./sock-shop/deploy/kubernetes/manifests
          name: Bring down socks web app

  tear-down-infra:
    <<: *terraformImage
    steps:
      - checkout
      - run:
          name: Tear down infrastructure
          command: |
            cd .circleci/terraform-cluster
            terraform init
            terraform destroy -auto-approve
workflows:
  default:
    jobs:
      - build-base-image
      - configure-infra
      - deploy-socks-app:
         requires:
          - configure-infra
      # - bring-down-web-app:
      #    requires:
      #     - deploy-socks-app
      #     - deploy-note-app
      # - tear-down-infra:
      #     requires:
      #       - bring-down-web-app